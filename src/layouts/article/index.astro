---
import "../../assets/styles/main.css";
import "../../assets/styles/article.css";
import type { ArticleLayout } from "../../interfaces";
import { CategoryMap } from "../../utils/categories";
import Giscus from "@giscus/react";
import { calculateReadingTime } from "../../utils/reading-time";
import config from "../../settings";
import Layout from "../base/index.astro";

type Props = ArticleLayout;

const timeToRead = calculateReadingTime(await Astro.slots.render("default"));
const { content } = Astro.props;

const editUrl = (path: string) =>
  `${config.repo_url}/edit/main/src/pages/articles/${path}.mdx`;

const discussUrl = (path: string) =>
  `https://twitter.com/search?q=${encodeURIComponent(
    `${config.url}/articles/${path}`
  )}`;
---

<Layout>
  <article>
    <div class="xl:divide-y xl:divide-gray-200 xl:dark:divide-gray-700">
      <header class="xl:pb-6">
        <div class="space-y-1 text-center">
          <dl class="space-y-10">
            <div>
              <dt class="sr-only">Publicado el</dt>
              <dd
                class="text-base font-avenir leading-6 text-gray-500 dark:text-gray-400"
              >
                <time
                  date-time={content.date}
                  transition:name={`date ${content.slug}`}
                >
                  {new Date(content.date).toLocaleDateString()}
                </time>
              </dd>
            </div>
          </dl>

          <div>
            <h1
              class="text-3xl font-hero leading-9 tracking-tight text-gray-900 dark:text-gray-100 sm:text-4xl sm:leading-10 md:text-5xl md:leading-14"
              transition:name={`title ${content.slug} name`}
            >
              {content.title}
            </h1>
          </div>

          <p>
            ¿Ves alguna errata o quieres modificar algo?
            <a
              class="text-primary-500 hover:text-primary-600 dark:hover:text-primary-400"
              href={editUrl(content.slug)}
            >
              Haz una Pull Request
            </a>
          </p>
        </div>
      </header>

      <div
        class="grid-rows-[auto_1fr] pt-10 divide-y divide-gray-200 pb-8 dark:divide-gray-700 xl:grid xl:grid-cols-4 xl:gap-x-6 xl:divide-y-0"
      >
        <div></div>

        <div
          class="divide-y divide-gray-200 dark:divide-gray-700 xl:col-span-3 xl:row-span-2 xl:pb-0"
        >
          <div
            id="article-body"
            class="prose max-w-none pb-8 dark:prose-invert"
          >
            <slot />
          </div>

          <div
            class="divide-y divide-gray-200 dark:divide-gray-700 xl:col-span-3 xl:row-span-2 xl:pb-0"
          >
            <div class="pb-6 pt-6 text-sm text-gray-700 dark:text-gray-300">
              <a href={discussUrl(content.slug)} rel="nofollow">
                Discuss on Twitter</a
              >
              {` • `}
              <a href={editUrl(content.slug)}>View on GitHub</a>
            </div>
             Cargar comentarios
            <Giscus
              id="comments"
              repo="giscus/giscus-component"
              repoId="MDEwOlJlcG9zaXRvcnkzOTEzMTMwMjA="
              category="Announcements"
              categoryId="DIC_kwDOF1L2fM4B-hVS"
              mapping="specific"
              term="Welcome to @giscus/react component!"
              reactionsEnabled="1"
              emitMetadata="0"
              inputPosition="top"
              theme="light"
              lang="es"
              loading="lazy"
            />
          </div>
        </div>

        <footer>
          <div
            class="divide-gray-200 text-sm font-medium leading-5 dark:divide-gray-700 xl:col-start-1 xl:row-start-2 xl:divide-y"
          >
            <div class="py-4">
              <p
                class="text-xs uppercase tracking-wide text-gray-500 dark:text-gray-400"
              >
                Categorías
              </p>
              <div class="flex flex-wrap">
                {
                  content.categories.map((category) => (
                    <p class="mr-3 text-primary-500">
                      {CategoryMap.get(category)}
                    </p>
                  ))
                }
              </div>
            </div>

            <div class="py-4">
              <p
                class="text-xs uppercase tracking-wide text-gray-500 dark:text-gray-400"
              >
                Tiempo de lectura
              </p>
              <div class="flex flex-wrap">{timeToRead} minutos</div>
            </div>

            <div
              class="flex justify-between py-4 xl:block xl:space-y-8 xl:py-8"
            >
              <div>
                <h2
                  class="text-xs uppercase tracking-wide text-gray-500 dark:text-gray-400"
                >
                  Artículo anterior
                </h2>
                <div
                  class="text-primary-500 hover:text-primary-600 dark:hover:text-primary-400"
                >
                  <a href="">Title</a>
                </div>
              </div>

              <div>
                <h2
                  class="text-xs uppercase tracking-wide text-gray-500 dark:text-gray-400"
                >
                  Siguiente artículo
                </h2>
                <div
                  class="text-primary-500 hover:text-primary-600 dark:hover:text-primary-400"
                >
                  <a href="">Title</a>
                </div>
              </div>
            </div>
          </div>

          <div class="pt-4 xl:pt-8">
            <a
              href="/"
              class="text-primary-500 hover:text-primary-600 dark:hover:text-primary-400"
              aria-label="Volver al inicio"
            >
              &larr; Volver al inicio
            </a>
          </div>
        </footer>
      </div>
    </div>
  </article>
</Layout>
